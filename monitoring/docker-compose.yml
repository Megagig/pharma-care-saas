# Docker Compose for Pharmacare Monitoring Stack
version: '3.8'

services:
  # Prometheus - Metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: pharmacare-prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    restart: unless-stopped
    networks:
      - monitoring

  # Grafana - Metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: pharmacare-grafana
    ports:
      - '3001:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-dashboard.json:/var/lib/grafana/dashboards/pharmacare-dashboard.json
      - ./grafana-provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=pharmacare_admin_2024
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    restart: unless-stopped
    networks:
      - monitoring

  # Alertmanager - Alert handling
  alertmanager:
    image: prom/alertmanager:latest
    container_name: pharmacare-alertmanager
    ports:
      - '9093:9093'
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    restart: unless-stopped
    networks:
      - monitoring

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: pharmacare-node-exporter
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - monitoring

  # MongoDB Exporter - Database metrics
  mongodb-exporter:
    image: percona/mongodb_exporter:latest
    container_name: pharmacare-mongodb-exporter
    ports:
      - '9216:9216'
    environment:
      - MONGODB_URI=mongodb://localhost:27017/pharmacare
    command:
      - '--mongodb.uri=mongodb://localhost:27017/pharmacare'
      - '--collect-all'
    restart: unless-stopped
    networks:
      - monitoring

  # Redis Exporter - Cache metrics (if using Redis)
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: pharmacare-redis-exporter
    ports:
      - '9121:9121'
    environment:
      - REDIS_ADDR=redis://localhost:6379
    restart: unless-stopped
    networks:
      - monitoring

  # Nginx Exporter - Web server metrics (if using Nginx)
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: pharmacare-nginx-exporter
    ports:
      - '9113:9113'
    command:
      - '-nginx.scrape-uri=http://localhost:8080/nginx_status'
    restart: unless-stopped
    networks:
      - monitoring

  # PM2 Exporter - Process metrics
  pm2-exporter:
    image: node:18-alpine
    container_name: pharmacare-pm2-exporter
    ports:
      - '9209:9209'
    volumes:
      - ./pm2-exporter:/app
    working_dir: /app
    command: ['node', 'index.js']
    restart: unless-stopped
    networks:
      - monitoring

  # Loki - Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: pharmacare-loki
    ports:
      - '3100:3100'
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - monitoring

  # Promtail - Log shipping
  promtail:
    image: grafana/promtail:latest
    container_name: pharmacare-promtail
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml
      - /var/log/pharmacare:/var/log/pharmacare:ro
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - monitoring

  # Jaeger - Distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: pharmacare-jaeger
    ports:
      - '16686:16686'
      - '14268:14268'
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: unless-stopped
    networks:
      - monitoring

  # Uptime Kuma - Service monitoring
  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: pharmacare-uptime-kuma
    ports:
      - '3002:3001'
    volumes:
      - uptime_kuma_data:/app/data
    restart: unless-stopped
    networks:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  loki_data:
  uptime_kuma_data:

networks:
  monitoring:
    driver: bridge
