"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const auth_1 = require("../middlewares/auth");
const adminController_1 = require("../controllers/adminController");
const roleRoutes_1 = __importDefault(require("./roleRoutes"));
const permissionRoutes_1 = __importDefault(require("./permissionRoutes"));
const userRoleRoutes_1 = __importDefault(require("./userRoleRoutes"));
const roleHierarchyRoutes_1 = __importDefault(require("./roleHierarchyRoutes"));
const router = express_1.default.Router();
router.use(auth_1.auth);
router.use(auth_1.requireAdmin);
router.get('/users', adminController_1.adminController.getAllUsers);
router.get('/users/:userId', adminController_1.adminController.getUserById);
router.put('/users/:userId/role', adminController_1.adminController.updateUserRole);
router.post('/users/:userId/suspend', adminController_1.adminController.suspendUser);
router.post('/users/:userId/reactivate', adminController_1.adminController.reactivateUser);
router.get('/licenses/pending', adminController_1.adminController.getPendingLicenses);
router.post('/licenses/:userId/approve', adminController_1.adminController.approveLicense);
router.post('/licenses/:userId/reject', adminController_1.adminController.rejectLicense);
router.get('/feature-flags', adminController_1.adminController.getAllFeatureFlags);
router.post('/feature-flags', adminController_1.adminController.createFeatureFlag);
router.put('/feature-flags/:flagId', adminController_1.adminController.updateFeatureFlag);
router.get('/analytics', adminController_1.adminController.getSystemAnalytics);
router.use('/roles', roleRoutes_1.default);
router.use('/permissions', permissionRoutes_1.default);
router.use('/users', userRoleRoutes_1.default);
router.use('/roles', roleHierarchyRoutes_1.default);
exports.default = router;
//# sourceMappingURL=admin.js.map