import{r as y,aQ as Q,bf as G,j as a,C as K,b as fe,B as h,T as g,D as E,aa as Y,l as $,d as J,I as D,h as M,a0 as pe,a5 as F,a7 as P,a8 as k,a9 as B,f as O,aR as he,aS as me,be as ge,aT as xe,bi as I,bj as ye,aU as Re,W as be,a as u,cc as je,cg as Oe}from"./index-B_pWc9hu.js";import{A as ve}from"./Add-D5-B7xRD.js";import{D as Ce}from"./Delete-BIyg2wQJ.js";import{E as Ae}from"./Edit-DD3Q49Z-.js";import{L as X}from"./LocalHospital-BNb4THgq.js";import{S as we}from"./Search-C2mZoRVv.js";import{A as Se}from"./Autocomplete-HcpzFt3K.js";const C={medications:["Penicillin","Amoxicillin","Ampicillin","Aspirin","Ibuprofen","Naproxen","Sulfonamides","Codeine","Morphine","Latex","Iodine","Contrast dye"],foods:["Peanuts","Tree nuts","Shellfish","Fish","Eggs","Milk","Wheat","Soy","Sesame"],environmental:["Dust mites","Pollen","Pet dander","Mold","Insect stings","Bee stings","Wasp stings"]},Z=[...C.medications,...C.foods,...C.environmental],W=[{value:"mild",label:"Mild",color:"success",description:"Minor symptoms, not life-threatening"},{value:"moderate",label:"Moderate",color:"warning",description:"Significant symptoms requiring treatment"},{value:"severe",label:"Severe",color:"error",description:"Life-threatening, requires immediate attention"}],N=["Skin rash","Hives","Itching","Swelling","Difficulty breathing","Wheezing","Nausea","Vomiting","Diarrhea","Anaphylaxis","Dizziness","Fainting","Other"],Pe=({value:i=[],onChange:o,error:t,disabled:e=!1})=>{const[r,s]=y.useState(!1),[n,c]=y.useState(null),[x,T]=y.useState(""),[z,ee]=y.useState("all"),R=Q.useMemo(()=>i.map(l=>typeof l=="string"?{substance:l,severity:"mild"}:l),[i]),{control:Ee,watch:re}=G({defaultValues:{allergies:R}}),v=re("allergies");Q.useEffect(()=>{const l=v.map(d=>d.substance);o(l)},[v,o]);const{control:A,handleSubmit:_,reset:w,watch:te,formState:{errors:j}}=G({defaultValues:{substance:"",severity:"mild",reaction:"",customReaction:"",notes:""}}),L=te(),H=y.useCallback((l,d)=>{l?(w({substance:l.substance,severity:l.severity,reaction:l.reaction&&N.includes(l.reaction)?l.reaction:"Other",customReaction:l.reaction&&!N.includes(l.reaction)?l.reaction:"",notes:l.notes||""}),c(d??null)):(w({substance:"",severity:"mild",reaction:"",customReaction:"",notes:""}),c(null)),s(!0)},[w]),S=y.useCallback(()=>{s(!1),c(null),w()},[w]),V=y.useCallback(l=>{const d=l.reaction==="Other"?l.customReaction:l.reaction,p={substance:l.substance.trim(),severity:l.severity,reaction:d.trim()||void 0,notes:l.notes.trim()||void 0},b=[...v];n!==null?b[n]=p:b.push(p),{onChange:ce=>{const de=ce.map(ue=>ue.substance);o(de)}}.onChange(b),S()},[v,n,o,S]),se=y.useCallback(l=>{const p=v.filter((b,U)=>U!==l).map(b=>b.substance);o(p)},[v,o]),ae=y.useCallback(l=>{i.includes(l)||o([...i,l])},[i,o]),q=()=>{let l=[];switch(z){case"medications":l=C.medications;break;case"foods":l=C.foods;break;case"environmental":l=C.environmental;break;default:l=Z}return l.filter(d=>d.toLowerCase().includes(x.toLowerCase())&&!i.includes(d))},ne=l=>{const d=W.find(p=>p.value===l);return(d==null?void 0:d.color)||"default"},le=l=>l==="severe"?a.jsx(be,{sx:{fontSize:16,color:"error.main"}}):null,oe=l=>l.trim()?l.trim().length<2?"Substance name must be at least 2 characters":!0:"Allergy substance is required",ie=(l,d)=>l==="Other"&&!d.trim()?"Please specify the reaction":!0;return a.jsx(K,{children:a.jsxs(fe,{children:[a.jsxs(h,{sx:{mb:3},children:[a.jsx(g,{variant:"h6",sx:{fontWeight:600,mb:1},children:"Allergies & Adverse Reactions"}),a.jsx(g,{variant:"body2",color:"text.secondary",children:"Document known allergies and adverse drug reactions for safety screening"})]}),t&&a.jsx(E,{severity:"error",sx:{mb:3},children:t}),R.length>0?a.jsxs(h,{sx:{mb:3},children:[a.jsxs(g,{variant:"subtitle2",sx:{fontWeight:600,mb:2},children:["Recorded Allergies (",R.length,")"]}),a.jsx(Y,{spacing:2,children:R.map((l,d)=>{var p;return a.jsx(K,{variant:"outlined",sx:{p:2},children:a.jsxs(h,{sx:{display:"flex",alignItems:"flex-start",justifyContent:"space-between"},children:[a.jsxs(h,{sx:{flex:1},children:[a.jsxs(h,{sx:{display:"flex",alignItems:"center",mb:1},children:[a.jsx(X,{sx:{mr:1,color:"primary.main",fontSize:20}}),a.jsx(g,{variant:"subtitle2",sx:{fontWeight:600},children:l.substance}),le(l.severity),a.jsx($,{label:(p=W.find(b=>b.value===l.severity))==null?void 0:p.label,size:"small",color:ne(l.severity),variant:"outlined",sx:{ml:1}})]}),l.reaction&&a.jsxs(g,{variant:"body2",color:"text.secondary",sx:{mb:.5},children:[a.jsx("strong",{children:"Reaction:"})," ",l.reaction]}),l.notes&&a.jsxs(g,{variant:"body2",color:"text.secondary",children:[a.jsx("strong",{children:"Notes:"})," ",l.notes]})]}),a.jsxs(h,{sx:{display:"flex",gap:1},children:[a.jsx(J,{title:"Edit allergy",children:a.jsx(D,{size:"small",onClick:()=>H(l,d),disabled:e,children:a.jsx(Ae,{fontSize:"small"})})}),a.jsx(J,{title:"Remove allergy",children:a.jsx(D,{size:"small",color:"error",onClick:()=>se(d),disabled:e,children:a.jsx(Ce,{fontSize:"small"})})})]})]})},d)})})]}):a.jsx(E,{severity:"info",sx:{mb:3},children:a.jsx(g,{variant:"body2",children:"No allergies recorded. If the patient has no known allergies, this is noted. Add any known allergies to prevent adverse reactions."})}),a.jsx(h,{sx:{display:"flex",justifyContent:"center",mb:3},children:a.jsx(M,{variant:"contained",startIcon:a.jsx(ve,{}),onClick:()=>H(),disabled:e,children:"Add Allergy"})}),a.jsx(pe,{sx:{my:3}}),a.jsxs(h,{children:[a.jsx(g,{variant:"subtitle2",sx:{fontWeight:600,mb:2},children:"Quick Add Common Allergens"}),a.jsxs(h,{sx:{display:"grid",gridTemplateColumns:{xs:"1fr",sm:"1fr 1fr"},gap:2,mb:2},children:[a.jsx(F,{size:"small",placeholder:"Search allergens...",value:x,onChange:l=>T(l.target.value),slotProps:{input:{startAdornment:a.jsx(we,{sx:{mr:1,color:"text.secondary"}})}},disabled:e,fullWidth:!0}),a.jsxs(P,{size:"small",fullWidth:!0,children:[a.jsx(k,{children:"Category"}),a.jsxs(B,{value:z,onChange:l=>ee(l.target.value),label:"Category",disabled:e,children:[a.jsx(O,{value:"all",children:"All Categories"}),a.jsx(O,{value:"medications",children:"Medications"}),a.jsx(O,{value:"foods",children:"Foods"}),a.jsx(O,{value:"environmental",children:"Environmental"})]})]})]}),a.jsx(h,{sx:{display:"flex",flexWrap:"wrap",gap:1},children:q().slice(0,20).map(l=>a.jsx($,{label:l,onClick:()=>ae(l),disabled:e,sx:{cursor:"pointer"},variant:"outlined",size:"small"},l))}),q().length===0&&a.jsx(g,{variant:"body2",color:"text.secondary",sx:{mt:1},children:x?`No allergens found matching "${x}"`:"All common allergens have been added"})]}),a.jsxs(he,{open:r,onClose:S,maxWidth:"sm",fullWidth:!0,slotProps:{paper:{sx:{borderRadius:2}}},children:[a.jsxs(me,{children:[a.jsxs(h,{sx:{display:"flex",alignItems:"center",pr:6},children:[a.jsx(X,{sx:{mr:1}}),n!==null?"Edit Allergy":"Add Allergy"]}),a.jsx(D,{onClick:S,sx:{position:"absolute",right:8,top:8},children:a.jsx(ge,{})})]}),a.jsx(xe,{dividers:!0,children:a.jsx("form",{onSubmit:_(V),children:a.jsxs(Y,{spacing:3,children:[a.jsx(I,{name:"substance",control:A,rules:{validate:oe},render:({field:l})=>a.jsx(Se,{...l,options:Z,freeSolo:!0,value:l.value,onChange:(d,p)=>l.onChange(p||""),onInputChange:(d,p)=>l.onChange(p),renderInput:d=>{var p;return a.jsx(F,{...d,label:"Allergy Substance",placeholder:"Enter or search allergen",error:!!j.substance,helperText:(p=j.substance)==null?void 0:p.message,required:!0})}})}),a.jsx(I,{name:"severity",control:A,render:({field:l})=>a.jsxs(P,{fullWidth:!0,children:[a.jsx(k,{children:"Severity"}),a.jsx(B,{...l,label:"Severity",children:W.map(d=>a.jsx(O,{value:d.value,children:a.jsxs(h,{sx:{display:"flex",alignItems:"center"},children:[a.jsx($,{label:d.label,size:"small",color:d.color,variant:"outlined",sx:{mr:1}}),a.jsx(g,{variant:"body2",color:"text.secondary",children:d.description})]})},d.value))})]})}),a.jsxs(h,{children:[a.jsx(I,{name:"reaction",control:A,rules:{validate:l=>ie(l,L.customReaction)},render:({field:l})=>a.jsxs(P,{fullWidth:!0,error:!!j.reaction,children:[a.jsx(k,{children:"Reaction Type (Optional)"}),a.jsxs(B,{...l,label:"Reaction Type (Optional)",children:[a.jsx(O,{value:"",children:a.jsx("em",{children:"Not specified"})}),N.map(d=>a.jsx(O,{value:d,children:d},d))]}),j.reaction&&a.jsx(ye,{children:j.reaction.message})]})}),L.reaction==="Other"&&a.jsx(I,{name:"customReaction",control:A,render:({field:l})=>{var d;return a.jsx(F,{...l,label:"Specify Reaction",placeholder:"Describe the allergic reaction",fullWidth:!0,sx:{mt:2},error:!!j.customReaction,helperText:(d=j.customReaction)==null?void 0:d.message})}})]}),a.jsx(I,{name:"notes",control:A,render:({field:l})=>a.jsx(F,{...l,label:"Additional Notes (Optional)",placeholder:"Any additional information about this allergy",multiline:!0,rows:2,fullWidth:!0})}),L.severity==="severe"&&a.jsx(E,{severity:"error",children:a.jsxs(g,{variant:"body2",children:[a.jsx("strong",{children:"Severe Allergy Warning:"})," This allergy will be prominently flagged during medication prescribing and clinical assessments to prevent life-threatening reactions."]})})]})})}),a.jsxs(Re,{sx:{p:3},children:[a.jsx(M,{onClick:S,children:"Cancel"}),a.jsxs(M,{onClick:_(V),variant:"contained",children:[n!==null?"Update":"Add"," Allergy"]})]})]}),R.length>0&&a.jsxs(h,{sx:{mt:3},children:[R.some(l=>l.severity==="severe")&&a.jsx(E,{severity:"error",sx:{mb:2},children:a.jsxs(g,{variant:"body2",children:[a.jsx("strong",{children:"Critical Allergies Detected:"})," This patient has severe allergies that require immediate attention during medication prescribing and treatment planning."]})}),a.jsx(E,{severity:"success",children:a.jsxs(g,{variant:"body2",children:[a.jsx("strong",{children:"Allergy Summary:"})," ",R.length," allerg",R.length>1?"ies":"y"," recorded. This information will be used for drug interaction and contraindication checking."]})})]})]})})},f="/api/lab",m={createOrder:async i=>(await u.post(`${f}/orders`,i)).data,getOrders:async(i={})=>{const o=new URLSearchParams;return Object.entries(i).forEach(([e,r])=>{r!=null&&o.append(e,String(r))}),(await u.get(`${f}/orders?${o.toString()}`)).data},getOrder:async i=>(await u.get(`${f}/orders/${i}`)).data,updateOrderStatus:async(i,o)=>(await u.patch(`${f}/orders/${i}/status`,{status:o})).data,cancelOrder:async i=>(await u.post(`${f}/orders/${i}/cancel`)).data,addResult:async i=>(await u.post(`${f}/results`,i)).data,getResults:async(i={})=>{const o=new URLSearchParams;return Object.entries(i).forEach(([e,r])=>{r!=null&&o.append(e,String(r))}),(await u.get(`${f}/results?${o.toString()}`)).data},getResult:async i=>(await u.get(`${f}/results/${i}`)).data,updateResult:async(i,o)=>(await u.patch(`${f}/results/${i}`,o)).data,deleteResult:async i=>(await u.delete(`${f}/results/${i}`)).data,getTrends:async(i,o,t=90)=>(await u.get(`${f}/trends/${i}/${o}?days=${t}`)).data,getCriticalResults:async i=>{const o=i?`?workplaceId=${i}`:"";return(await u.get(`${f}/results/critical${o}`)).data},getAbnormalResults:async(i,o=30)=>(await u.get(`${f}/results/abnormal/${i}?days=${o}`)).data,importFHIR:async i=>(await u.post(`${f}/import/fhir`,i)).data,exportOrder:async i=>(await u.post(`${f}/orders/${i}/export`)).data,getTestCatalog:async i=>{const o=i?`?search=${encodeURIComponent(i)}`:"";return(await u.get(`${f}/catalog${o}`)).data},getReferenceRanges:async i=>(await u.get(`${f}/reference-ranges/${i}`)).data};je()(Oe((i,o)=>({orders:[],results:[],selectedOrder:null,selectedResult:null,filters:{orders:{search:"",patientId:"",status:void 0,dateFrom:"",dateTo:"",page:1,limit:20,sortBy:"orderDate",sortOrder:"desc"},results:{search:"",patientId:"",testCode:"",interpretation:void 0,dateFrom:"",dateTo:"",page:1,limit:20,sortBy:"performedAt",sortOrder:"desc"}},pagination:{orders:{page:1,limit:20,total:0,pages:0,hasNext:!1,hasPrev:!1},results:{page:1,limit:20,total:0,pages:0,hasNext:!1,hasPrev:!1}},trends:{},testCatalog:[],criticalResults:[],abnormalResults:[],loading:{createOrder:!1,fetchOrders:!1,addResult:!1,fetchResults:!1,updateOrder:!1,updateResult:!1,fetchTrends:!1,fetchCatalog:!1,fetchCritical:!1,fetchAbnormal:!1,fhirImport:!1,fhirExport:!1},errors:{createOrder:null,fetchOrders:null,addResult:null,fetchResults:null,updateOrder:null,updateResult:null,fetchTrends:null,fetchCatalog:null,fetchCritical:null,fetchAbnormal:null,fhirImport:null,fhirExport:null},createOrder:async t=>{const{setLoading:e,setError:r,addOrderToState:s}=o();e("createOrder",!0),r("createOrder",null);try{const n=await m.createOrder(t);return n.success&&n.data?(s(n.data),i({selectedOrder:n.data}),n.data):(r("createOrder",n.message||"Failed to create order"),null)}catch(n){const c=n instanceof Error?n.message:"An unexpected error occurred";return r("createOrder",c),null}finally{e("createOrder",!1)}},fetchOrders:async t=>{const{setLoading:e,setError:r}=o();e("fetchOrders",!0),r("fetchOrders",null);try{const s=t||o().filters.orders,n=await m.getOrders(s);n.success&&n.data?i({orders:n.data.results||[],pagination:{...o().pagination,orders:n.meta||{page:s.page||1,limit:s.limit||20,total:0,pages:0,hasNext:!1,hasPrev:!1}}}):r("fetchOrders",n.message||"Failed to fetch orders")}catch(s){const n=s instanceof Error?s.message:"An unexpected error occurred";r("fetchOrders",n)}finally{e("fetchOrders",!1)}},updateOrderStatus:async(t,e)=>{const{setLoading:r,setError:s,updateOrderInState:n}=o();r("updateOrder",!0),s("updateOrder",null);try{const c=await m.updateOrderStatus(t,e);return c.success&&c.data?(n(t,c.data),!0):(s("updateOrder",c.message||"Failed to update order status"),!1)}catch(c){const x=c instanceof Error?c.message:"An unexpected error occurred";return s("updateOrder",x),!1}finally{r("updateOrder",!1)}},cancelOrder:async t=>{const{setLoading:e,setError:r,updateOrderInState:s}=o();e("updateOrder",!0),r("updateOrder",null);try{const n=await m.cancelOrder(t);return n.success&&n.data?(s(t,n.data),!0):(r("updateOrder",n.message||"Failed to cancel order"),!1)}catch(n){const c=n instanceof Error?n.message:"An unexpected error occurred";return r("updateOrder",c),!1}finally{e("updateOrder",!1)}},addResult:async t=>{const{setLoading:e,setError:r,addResultToState:s}=o();e("addResult",!0),r("addResult",null);try{const n=await m.addResult(t);return n.success&&n.data?(s(n.data),i({selectedResult:n.data}),n.data):(r("addResult",n.message||"Failed to add result"),null)}catch(n){const c=n instanceof Error?n.message:"An unexpected error occurred";return r("addResult",c),null}finally{e("addResult",!1)}},fetchResults:async t=>{const{setLoading:e,setError:r}=o();e("fetchResults",!0),r("fetchResults",null);try{const s=t||o().filters.results,n=await m.getResults(s);n.success&&n.data?i({results:n.data.results||[],pagination:{...o().pagination,results:n.meta||{page:s.page||1,limit:s.limit||20,total:0,pages:0,hasNext:!1,hasPrev:!1}}}):r("fetchResults",n.message||"Failed to fetch results")}catch(s){const n=s instanceof Error?s.message:"An unexpected error occurred";r("fetchResults",n)}finally{e("fetchResults",!1)}},updateResult:async(t,e)=>{const{setLoading:r,setError:s,updateResultInState:n}=o();r("updateResult",!0),s("updateResult",null);try{const c=await m.updateResult(t,e);return c.success&&c.data?(n(t,c.data),!0):(s("updateResult",c.message||"Failed to update result"),!1)}catch(c){const x=c instanceof Error?c.message:"An unexpected error occurred";return s("updateResult",x),!1}finally{r("updateResult",!1)}},deleteResult:async t=>{const{setLoading:e,setError:r,removeResultFromState:s}=o();e("updateResult",!0),r("updateResult",null);try{const n=await m.deleteResult(t);return n.success?(s(t),!0):(r("updateResult",n.message||"Failed to delete result"),!1)}catch(n){const c=n instanceof Error?n.message:"An unexpected error occurred";return r("updateResult",c),!1}finally{e("updateResult",!1)}},fetchTrends:async(t,e,r=90)=>{const{setLoading:s,setError:n}=o();s("fetchTrends",!0),n("fetchTrends",null);try{const c=await m.getTrends(t,e,r);if(c.success&&c.data){const x=`${t}-${e}`;i(T=>({trends:{...T.trends,[x]:c.data}}))}else n("fetchTrends",c.message||"Failed to fetch trends")}catch(c){const x=c instanceof Error?c.message:"An unexpected error occurred";n("fetchTrends",x)}finally{s("fetchTrends",!1)}},getTrendData:(t,e)=>{const r=`${t}-${e}`;return o().trends[r]||null},fetchCriticalResults:async t=>{const{setLoading:e,setError:r}=o();e("fetchCritical",!0),r("fetchCritical",null);try{const s=await m.getCriticalResults(t);s.success&&s.data?i({criticalResults:s.data}):r("fetchCritical",s.message||"Failed to fetch critical results")}catch(s){const n=s instanceof Error?s.message:"An unexpected error occurred";r("fetchCritical",n)}finally{e("fetchCritical",!1)}},fetchAbnormalResults:async(t,e=30)=>{const{setLoading:r,setError:s}=o();r("fetchAbnormal",!0),s("fetchAbnormal",null);try{const n=await m.getAbnormalResults(t,e);n.success&&n.data?i({abnormalResults:n.data}):s("fetchAbnormal",n.message||"Failed to fetch abnormal results")}catch(n){const c=n instanceof Error?n.message:"An unexpected error occurred";s("fetchAbnormal",c)}finally{r("fetchAbnormal",!1)}},fetchTestCatalog:async t=>{const{setLoading:e,setError:r}=o();e("fetchCatalog",!0),r("fetchCatalog",null);try{const s=await m.getTestCatalog(t);s.success&&s.data?i({testCatalog:s.data}):r("fetchCatalog",s.message||"Failed to fetch test catalog")}catch(s){const n=s instanceof Error?s.message:"An unexpected error occurred";r("fetchCatalog",n)}finally{e("fetchCatalog",!1)}},searchTestCatalog:t=>{const{testCatalog:e}=o();if(!t)return e;const r=t.toLowerCase();return e.filter(s=>s.name.toLowerCase().includes(r)||s.code.toLowerCase().includes(r)||s.category.toLowerCase().includes(r))},importFHIR:async t=>{const{setLoading:e,setError:r}=o();e("fhirImport",!0),r("fhirImport",null);try{const s=await m.importFHIR(t);return s.success&&s.data?(s.data.forEach(n=>{o().addResultToState(n)}),!0):(r("fhirImport",s.message||"Failed to import FHIR data"),!1)}catch(s){const n=s instanceof Error?s.message:"An unexpected error occurred";return r("fhirImport",n),!1}finally{e("fhirImport",!1)}},exportOrder:async t=>{const{setLoading:e,setError:r}=o();e("fhirExport",!0),r("fhirExport",null);try{const s=await m.exportOrder(t);return s.success?!0:(r("fhirExport",s.message||"Failed to export order"),!1)}catch(s){const n=s instanceof Error?s.message:"An unexpected error occurred";return r("fhirExport",n),!1}finally{e("fhirExport",!1)}},setOrderFilters:t=>{i(e=>({filters:{...e.filters,orders:{...e.filters.orders,...t}}}))},setResultFilters:t=>{i(e=>({filters:{...e.filters,results:{...e.filters.results,...t}}}))},clearOrderFilters:()=>{i(t=>({filters:{...t.filters,orders:{search:"",patientId:"",status:void 0,dateFrom:"",dateTo:"",page:1,limit:20,sortBy:"orderDate",sortOrder:"desc"}}}))},clearResultFilters:()=>{i(t=>({filters:{...t.filters,results:{search:"",patientId:"",testCode:"",interpretation:void 0,dateFrom:"",dateTo:"",page:1,limit:20,sortBy:"performedAt",sortOrder:"desc"}}}))},searchOrders:t=>{const{setOrderFilters:e,fetchOrders:r}=o();e({search:t,page:1}),r()},searchResults:t=>{const{setResultFilters:e,fetchResults:r}=o();e({search:t,page:1}),r()},filterOrdersByPatient:t=>{const{setOrderFilters:e,fetchOrders:r}=o();e({patientId:t,page:1}),r()},filterResultsByPatient:t=>{const{setResultFilters:e,fetchResults:r}=o();e({patientId:t,page:1}),r()},filterOrdersByStatus:t=>{const{setOrderFilters:e,fetchOrders:r}=o();e({status:t,page:1}),r()},filterResultsByInterpretation:t=>{const{setResultFilters:e,fetchResults:r}=o();e({interpretation:t,page:1}),r()},setOrderPage:t=>{const{setOrderFilters:e,fetchOrders:r}=o();e({page:t}),r()},setOrderLimit:t=>{const{setOrderFilters:e,fetchOrders:r}=o();e({limit:t,page:1}),r()},setResultPage:t=>{const{setResultFilters:e,fetchResults:r}=o();e({page:t}),r()},setResultLimit:t=>{const{setResultFilters:e,fetchResults:r}=o();e({limit:t,page:1}),r()},selectOrder:t=>{i({selectedOrder:t})},selectResult:t=>{i({selectedResult:t})},addOrderToState:t=>{i(e=>({orders:[t,...e.orders],pagination:{...e.pagination,orders:{...e.pagination.orders,total:e.pagination.orders.total+1}}}))},updateOrderInState:(t,e)=>{i(r=>({orders:r.orders.map(s=>s._id===t?{...s,...e}:s)}))},removeOrderFromState:t=>{i(e=>({orders:e.orders.filter(r=>r._id!==t),pagination:{...e.pagination,orders:{...e.pagination.orders,total:Math.max(0,e.pagination.orders.total-1)}}}))},addResultToState:t=>{i(e=>({results:[t,...e.results],pagination:{...e.pagination,results:{...e.pagination.results,total:e.pagination.results.total+1}}}))},updateResultInState:(t,e)=>{i(r=>({results:r.results.map(s=>s._id===t?{...s,...e}:s)}))},removeResultFromState:t=>{i(e=>({results:e.results.filter(r=>r._id!==t),pagination:{...e.pagination,results:{...e.pagination.results,total:Math.max(0,e.pagination.results.total-1)}}}))},clearErrors:()=>{i({errors:{createOrder:null,fetchOrders:null,addResult:null,fetchResults:null,updateOrder:null,updateResult:null,fetchTrends:null,fetchCatalog:null,fetchCritical:null,fetchAbnormal:null,fhirImport:null,fhirExport:null}})},setLoading:(t,e)=>{i(r=>({loading:{...r.loading,[t]:e}}))},setError:(t,e)=>{i(r=>({errors:{...r.errors,[t]:e}}))},getOrdersByPatient:t=>o().orders.filter(e=>e.patientId===t),getResultsByPatient:t=>o().results.filter(e=>e.patientId===t),getResultsByOrder:t=>o().results.filter(e=>e.orderId===t),getPendingOrders:()=>o().orders.filter(t=>t.status==="ordered"||t.status==="collected"),getCompletedOrders:()=>o().orders.filter(t=>t.status==="completed"),getCriticalResultsByPatient:t=>o().criticalResults.filter(e=>e.patientId===t),getAbnormalResultsByPatient:t=>o().abnormalResults.filter(e=>e.patientId===t),getFilteredOrders:()=>{const{orders:t,filters:e}=o();let r=[...t];if(e.orders.search){const s=e.orders.search.toLowerCase();r=r.filter(n=>n.tests.some(c=>c.name.toLowerCase().includes(s)||c.code.toLowerCase().includes(s)))}return e.orders.patientId&&(r=r.filter(s=>s.patientId===e.orders.patientId)),e.orders.status&&(r=r.filter(s=>s.status===e.orders.status)),e.orders.dateFrom&&(r=r.filter(s=>new Date(s.orderDate)>=new Date(e.orders.dateFrom))),e.orders.dateTo&&(r=r.filter(s=>new Date(s.orderDate)<=new Date(e.orders.dateTo))),r},getFilteredResults:()=>{const{results:t,filters:e}=o();let r=[...t];if(e.results.search){const s=e.results.search.toLowerCase();r=r.filter(n=>n.testName.toLowerCase().includes(s)||n.testCode.toLowerCase().includes(s)||n.value.toLowerCase().includes(s))}return e.results.patientId&&(r=r.filter(s=>s.patientId===e.results.patientId)),e.results.testCode&&(r=r.filter(s=>s.testCode===e.results.testCode)),e.results.interpretation&&(r=r.filter(s=>s.interpretation===e.results.interpretation)),e.results.dateFrom&&(r=r.filter(s=>new Date(s.performedAt)>=new Date(e.results.dateFrom))),e.results.dateTo&&(r=r.filter(s=>new Date(s.performedAt)<=new Date(e.results.dateTo))),r},getResultInterpretationSummary:t=>{const e=o().getResultsByPatient(t);return{normal:e.filter(r=>r.interpretation==="normal").length,abnormal:e.filter(r=>r.interpretation==="abnormal"||r.interpretation==="high"||r.interpretation==="low").length,critical:e.filter(r=>r.interpretation==="critical").length,total:e.length}}}),{name:"lab-store",partialize:i=>({selectedOrder:i.selectedOrder,selectedResult:i.selectedResult,filters:i.filters})}));export{Pe as A};
