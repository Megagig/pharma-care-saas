import{c as A,j as e,r as o,D as I,I as B,aU as R,b4 as H,T as r,B as j,d as $,l as M,aT as V,C as G,b as X,x as O,L as F,n as k,aq as L,q as J,p as N,J as K,a9 as Q,h as D,O as Y,aP as Z,aQ as _,aR as ee,w as T,aS as ne,b5 as te,W as se,u as ae,e as U,aa as ie,aO as oe,b6 as re,b7 as le}from"./index-louytu0d.js";import{u as ce,C as de}from"./useClinicalNotesErrorHandling-zsNhAG95.js";import{S as P}from"./Snackbar-CN1k-M3c.js";import{S as q}from"./CloudOff-Z9x89yWa.js";import{E as fe}from"./ExpandLess-BOUZH1RV.js";import{S as W}from"./Sync-CKENTmTt.js";const ge=A(e.jsx("path",{d:"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96"})),ue=A(e.jsx("path",{d:"M21.5 14.98c-.02 0-.03 0-.05.01C21.2 13.3 19.76 12 18 12c-1.4 0-2.6.83-3.16 2.02C13.26 14.1 12 15.4 12 17c0 1.66 1.34 3 3 3l6.5-.02c1.38 0 2.5-1.12 2.5-2.5s-1.12-2.5-2.5-2.5M10 4.26v2.09C7.67 7.18 6 9.39 6 12c0 1.77.78 3.34 2 4.44V14h2v6H4v-2h2.73C5.06 16.54 4 14.4 4 12c0-3.73 2.55-6.85 6-7.74M20 6h-2.73c1.43 1.26 2.41 3.01 2.66 5h-2.02c-.23-1.36-.93-2.55-1.91-3.44V10h-2V4h6z"})),xe=({position:d="top",showDetails:u=!0,onSyncComplete:f,onSyncError:m})=>{const[n,a]=o.useState({isOnline:navigator.onLine,isSyncing:!1,syncProgress:0,syncError:null,offlineData:{pendingNotes:0,draftNotes:0,queuedUploads:0,lastSyncTime:null,totalOfflineSize:0}}),[p,g]=o.useState(!1),[y,w]=o.useState(!1),[C,S]=o.useState(!1);o.useEffect(()=>{const t=()=>{a(c=>({...c,isOnline:!0,syncError:null})),g(!1),(n.offlineData.pendingNotes>0||n.offlineData.queuedUploads>0)&&x()},l=()=>{a(c=>({...c,isOnline:!1})),g(!0)};return window.addEventListener("online",t),window.addEventListener("offline",l),()=>{window.removeEventListener("online",t),window.removeEventListener("offline",l)}},[n.offlineData]),o.useEffect(()=>{const t=async()=>{try{const c={pendingNotes:parseInt(localStorage.getItem("clinical-notes-pending")||"0"),draftNotes:parseInt(localStorage.getItem("clinical-notes-drafts")||"0"),queuedUploads:parseInt(localStorage.getItem("clinical-notes-uploads")||"0"),lastSyncTime:localStorage.getItem("clinical-notes-last-sync")?new Date(localStorage.getItem("clinical-notes-last-sync")):null,totalOfflineSize:parseInt(localStorage.getItem("clinical-notes-size")||"0")};a(s=>({...s,offlineData:c}))}catch(c){console.error("Failed to load offline stats:",c)}};t();const l=setInterval(t,3e4);return()=>clearInterval(l)},[]);const x=o.useCallback(async()=>{if(!(!n.isOnline||n.isSyncing))try{a(s=>({...s,isSyncing:!0,syncProgress:0,syncError:null}));const t=n.offlineData.pendingNotes+n.offlineData.queuedUploads;let l=0;for(let s=0;s<n.offlineData.pendingNotes;s++)await new Promise(h=>setTimeout(h,500)),l++,a(h=>({...h,syncProgress:Math.round(l/t*100)}));for(let s=0;s<n.offlineData.queuedUploads;s++)await new Promise(h=>setTimeout(h,1e3)),l++,a(h=>({...h,syncProgress:Math.round(l/t*100)}));const c={...n.offlineData,pendingNotes:0,queuedUploads:0,lastSyncTime:new Date};a(s=>({...s,isSyncing:!1,syncProgress:100,offlineData:c})),localStorage.setItem("clinical-notes-pending","0"),localStorage.setItem("clinical-notes-uploads","0"),localStorage.setItem("clinical-notes-last-sync",new Date().toISOString()),f&&f()}catch(t){const l=t instanceof Error?t.message:"Sync failed";a(c=>({...c,isSyncing:!1,syncError:l})),m&&t instanceof Error&&m(t)}},[n.isOnline,n.isSyncing,n.offlineData,f,m]),E=o.useCallback(async()=>{S(!0),await x(),setTimeout(()=>S(!1),1e3)},[x]),v=n.isOnline?n.isSyncing?{color:"info",icon:e.jsx(W,{sx:{animation:"spin 1s linear infinite"}}),message:"Syncing...",description:`Syncing clinical notes (${n.syncProgress}%)`}:n.syncError?{color:"error",icon:e.jsx(te,{}),message:"Sync Error",description:n.syncError}:n.offlineData.pendingNotes>0||n.offlineData.queuedUploads>0?{color:"warning",icon:e.jsx(se,{}),message:"Pending Sync",description:`${n.offlineData.pendingNotes+n.offlineData.queuedUploads} items pending`}:{color:"success",icon:e.jsx(T,{}),message:"Synced",description:"All clinical notes are up to date"}:{color:"error",icon:e.jsx(q,{}),message:"Offline",description:"Working offline - changes will sync when connected"},i=n.offlineData.pendingNotes>0||n.offlineData.queuedUploads>0||n.offlineData.draftNotes>0;return e.jsxs(e.Fragment,{children:[e.jsx(P,{open:p,anchorOrigin:{vertical:d,horizontal:"center"},autoHideDuration:null,children:e.jsxs(I,{severity:"warning",icon:e.jsx(q,{}),action:u&&e.jsx(B,{size:"small",onClick:()=>w(!y),sx:{color:"inherit"},children:y?e.jsx(fe,{}):e.jsx(R,{})}),children:[e.jsx(H,{children:"Working Offline"}),e.jsx(r,{variant:"body2",children:"Clinical notes will be saved locally and synced when connection is restored"}),i&&e.jsxs(r,{variant:"caption",display:"block",sx:{mt:.5},children:[n.offlineData.pendingNotes+n.offlineData.queuedUploads," ","items pending sync"]})]})}),e.jsxs(j,{sx:{position:"fixed",[d]:16,right:16,zIndex:1300,display:"flex",alignItems:"center",gap:1},children:[e.jsx($,{title:v.description,children:e.jsx(M,{icon:v.icon,label:v.message,color:v.color,size:"small",onClick:u?()=>w(!y):void 0,sx:{cursor:u?"pointer":"default","& .MuiChip-icon":{"@keyframes spin":{"0%":{transform:"rotate(0deg)"},"100%":{transform:"rotate(360deg)"}}}}})}),i&&e.jsx(M,{label:n.offlineData.pendingNotes+n.offlineData.queuedUploads,size:"small",color:"warning",variant:"outlined"})]}),u&&e.jsx(V,{in:y,children:e.jsx(G,{sx:{position:"fixed",[d]:60,right:16,zIndex:1299,minWidth:320,maxWidth:400,boxShadow:3},children:e.jsxs(X,{children:[e.jsx(r,{variant:"h6",gutterBottom:!0,children:"Clinical Notes Sync Status"}),e.jsxs(j,{sx:{display:"flex",alignItems:"center",gap:1,mb:2},children:[v.icon,e.jsx(r,{variant:"body2",fontWeight:"medium",children:v.message})]}),n.isSyncing&&e.jsxs(j,{sx:{mb:2},children:[e.jsx(r,{variant:"caption",color:"text.secondary",gutterBottom:!0,children:"Syncing clinical notes..."}),e.jsx(O,{variant:"determinate",value:n.syncProgress,sx:{mt:.5,mb:1}}),e.jsxs(r,{variant:"caption",color:"text.secondary",children:[n.syncProgress,"% complete"]})]}),e.jsxs(j,{sx:{mb:2},children:[e.jsx(r,{variant:"subtitle2",gutterBottom:!0,children:"Offline Data:"}),e.jsxs(F,{dense:!0,children:[e.jsxs(k,{sx:{py:.25,px:0},children:[e.jsx(L,{sx:{minWidth:32},children:e.jsx(J,{fontSize:"small",color:"warning"})}),e.jsx(N,{primary:`${n.offlineData.pendingNotes} pending notes`,primaryTypographyProps:{variant:"body2"}})]}),e.jsxs(k,{sx:{py:.25,px:0},children:[e.jsx(L,{sx:{minWidth:32},children:e.jsx(K,{fontSize:"small",color:"info"})}),e.jsx(N,{primary:`${n.offlineData.draftNotes} draft notes`,primaryTypographyProps:{variant:"body2"}})]}),e.jsxs(k,{sx:{py:.25,px:0},children:[e.jsx(L,{sx:{minWidth:32},children:e.jsx(ge,{fontSize:"small",color:"primary"})}),e.jsx(N,{primary:`${n.offlineData.queuedUploads} queued uploads`,primaryTypographyProps:{variant:"body2"}})]})]})]}),n.offlineData.lastSyncTime&&e.jsxs(r,{variant:"caption",color:"text.secondary",sx:{mb:2,display:"block"},children:["Last sync:"," ",n.offlineData.lastSyncTime.toLocaleString()]}),n.syncError&&e.jsx(I,{severity:"error",size:"small",sx:{mb:2},children:n.syncError}),e.jsxs(Q,{direction:"row",spacing:1,children:[e.jsx(D,{size:"small",variant:"contained",startIcon:e.jsx(W,{}),onClick:E,disabled:!n.isOnline||n.isSyncing,children:"Sync Now"}),e.jsx(D,{size:"small",variant:"outlined",startIcon:e.jsx(Y,{}),onClick:()=>{console.log("Show offline help")},children:"Help"})]})]})})}),e.jsxs(Z,{open:C,maxWidth:"sm",fullWidth:!0,disableEscapeKeyDown:!0,children:[e.jsx(_,{children:"Syncing Clinical Notes"}),e.jsx(ee,{children:e.jsxs(j,{sx:{py:2},children:[e.jsx(r,{variant:"body2",color:"text.secondary",gutterBottom:!0,children:"Syncing your offline clinical notes and uploads..."}),e.jsx(O,{variant:"determinate",value:n.syncProgress,sx:{mt:2,mb:1}}),e.jsxs(r,{variant:"caption",color:"text.secondary",children:[n.syncProgress,"% complete"]}),n.syncProgress===100&&e.jsxs(I,{severity:"success",sx:{mt:2},children:[e.jsx(T,{sx:{mr:1}}),"Sync completed successfully!"]})]})}),n.syncProgress===100&&e.jsx(ne,{children:e.jsx(D,{onClick:()=>S(!1),children:"Close"})})]})]})},he=({type:d,message:u,size:f="medium",variant:m="circular",progress:n,details:a,onCancel:p,showProgress:g=!1,fullScreen:y=!1,overlay:w=!1})=>{const C=ae(),S=()=>{if(u)return u;switch(d){case"initial":return"Loading clinical notes...";case"loading":return"Loading...";case"refreshing":return"Refreshing data...";case"saving":return"Saving note...";case"deleting":return"Deleting note...";case"uploading":return"Uploading files...";case"syncing":return"Syncing data...";case"searching":return"Searching notes...";case"filtering":return"Applying filters...";default:return"Processing..."}},x=()=>{const b=f==="small"?20:f==="medium"?32:48;switch(d){case"syncing":return e.jsx(ue,{sx:{fontSize:b,animation:"spin 1s linear infinite"}});default:return e.jsx(ie,{size:b})}},E={display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center",gap:2,p:f==="small"?2:f==="medium"?3:4,...y&&{position:"fixed",top:0,left:0,right:0,bottom:0,backgroundColor:U(C.palette.background.default,.9),zIndex:9999},...w&&{position:"absolute",top:0,left:0,right:0,bottom:0,backgroundColor:U(C.palette.background.paper,.8),zIndex:1e3}};return m==="linear"?e.jsxs(j,{sx:E,children:[e.jsx(r,{variant:"body2",color:"text.secondary",sx:{mb:1},children:S()}),e.jsx(O,{sx:{width:"100%",maxWidth:300},variant:g&&n!==void 0?"determinate":"indeterminate",value:n}),g&&n!==void 0&&e.jsxs(r,{variant:"caption",color:"text.secondary",children:[Math.round(n),"%"]}),a&&e.jsx(r,{variant:"caption",color:"text.secondary",children:a}),p&&e.jsx(D,{size:"small",onClick:p,sx:{mt:1},children:"Cancel"})]}):e.jsxs(j,{sx:E,children:[x(),e.jsx(r,{variant:f==="small"?"body2":"body1",color:"text.secondary",textAlign:"center",children:S()}),a&&e.jsx(r,{variant:"caption",color:"text.secondary",textAlign:"center",children:a}),g&&n!==void 0&&e.jsxs(r,{variant:"caption",color:"text.secondary",children:[Math.round(n),"% complete"]}),p&&e.jsx(D,{size:"small",onClick:p,sx:{mt:1},children:"Cancel"})]})},me=`
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
`;if(typeof document<"u"){const d=document.createElement("style");d.textContent=me,document.head.appendChild(d)}const Ee=({children:d,showOfflineIndicator:u=!0,showGlobalLoading:f=!0,context:m="clinical-notes-app"})=>{const[n,a]=o.useState({isLoading:!1,loadingMessage:"",hasNetworkError:!1,isRecovering:!1}),[p,g]=o.useState(!1),[y,w]=o.useState("");ce(),o.useEffect(()=>{const i=s=>{a(h=>{var z;return{...h,isLoading:!0,loadingMessage:((z=s.detail)==null?void 0:z.message)||"Loading..."}})},t=()=>{a(s=>({...s,isLoading:!1,loadingMessage:""}))},l=()=>{a(s=>({...s,hasNetworkError:!0}))},c=()=>{a(s=>({...s,hasNetworkError:!1,isRecovering:!0})),setTimeout(()=>{a(s=>({...s,isRecovering:!1}))},3e3)};return window.addEventListener("clinical-notes-loading-start",i),window.addEventListener("clinical-notes-loading-end",t),window.addEventListener("clinical-notes-network-error",l),window.addEventListener("clinical-notes-network-recovery",c),()=>{window.removeEventListener("clinical-notes-loading-start",i),window.removeEventListener("clinical-notes-loading-end",t),window.removeEventListener("clinical-notes-network-error",l),window.removeEventListener("clinical-notes-network-recovery",c)}},[]),o.useEffect(()=>{const i=()=>{n.hasNetworkError&&(window.dispatchEvent(new CustomEvent("clinical-notes-network-recovery")),x("Connection restored. Syncing data..."))},t=()=>{window.dispatchEvent(new CustomEvent("clinical-notes-network-error"))};return window.addEventListener("online",i),window.addEventListener("offline",t),()=>{window.removeEventListener("online",i),window.removeEventListener("offline",t)}},[n.hasNetworkError]);const C=o.useCallback(()=>{x("Clinical notes synced successfully")},[]),S=o.useCallback(i=>{re.error(`Sync failed: ${i.message}`)},[]),x=i=>{w(i),g(!0)},E=o.useCallback((i="Loading...")=>{window.dispatchEvent(new CustomEvent("clinical-notes-loading-start",{detail:{message:i}}))},[]),b=o.useCallback(()=>{window.dispatchEvent(new CustomEvent("clinical-notes-loading-end"))},[]),v={triggerGlobalLoading:E,stopGlobalLoading:b,showSuccessToast:x,globalState:n};return e.jsx(de,{context:m,onError:(i,t)=>{console.error("Clinical Notes UX Error:",{error:i,errorInfo:t,context:m})},children:e.jsx(pe.Provider,{value:v,children:e.jsxs(j,{sx:{position:"relative",minHeight:"100%"},children:[d,f&&e.jsx(le,{sx:{color:"#fff",zIndex:i=>i.zIndex.drawer+1,backgroundColor:"rgba(0, 0, 0, 0.3)"},open:n.isLoading,children:e.jsx(he,{type:"loading",message:n.loadingMessage,size:"large"})}),u&&e.jsx(xe,{onSyncComplete:C,onSyncError:S}),e.jsx(P,{open:p,autoHideDuration:4e3,onClose:()=>g(!1),anchorOrigin:{vertical:"bottom",horizontal:"center"},children:e.jsx(I,{onClose:()=>g(!1),severity:"success",variant:"filled",children:y})}),e.jsx(P,{open:n.isRecovering,autoHideDuration:3e3,anchorOrigin:{vertical:"top",horizontal:"center"},children:e.jsx(I,{severity:"info",variant:"filled",children:"Connection restored. Syncing clinical notes..."})})]})})})},pe=oe.createContext(null);export{Ee as C};
