import{a as c}from"./apiClient-BShn_SjK.js";class l{transformAnalysisStructure(n){var o,t,r,d,a,e;if(!n||typeof n!="object")return{primaryDiagnosis:{condition:"Unknown",confidence:0,reasoning:"No reasoning provided"},differentialDiagnoses:[],recommendedTests:[],treatmentSuggestions:[],riskFactors:[],followUpRecommendations:[]};const i=n;return{primaryDiagnosis:{condition:((t=(o=i.differentialDiagnoses)==null?void 0:o[0])==null?void 0:t.condition)||"Unknown",confidence:(((d=(r=i.differentialDiagnoses)==null?void 0:r[0])==null?void 0:d.probability)||0)/100,reasoning:((e=(a=i.differentialDiagnoses)==null?void 0:a[0])==null?void 0:e.reasoning)||"No reasoning provided"},differentialDiagnoses:(i.differentialDiagnoses||[]).slice(1).map(s=>({condition:s.condition||"Unknown",confidence:(s.probability||0)/100,reasoning:s.reasoning||"No reasoning provided"})),recommendedTests:(i.recommendedTests||[]).map(s=>({test:s.testName||"Unknown test",priority:s.priority==="urgent"?"high":s.priority==="routine"?"medium":"low",reasoning:s.reasoning||"No reasoning provided"})),treatmentSuggestions:(i.therapeuticOptions||[]).map(s=>({treatment:s.medication||"Unknown treatment",type:"medication",priority:"medium",reasoning:s.reasoning||"No reasoning provided"})),riskFactors:(i.redFlags||[]).map(s=>({factor:s.flag||"Unknown risk factor",severity:s.severity==="critical"?"high":s.severity||"medium",description:s.action||"No description provided"})),followUpRecommendations:i.referralRecommendation?[{action:`Referral to ${i.referralRecommendation.specialty||"specialist"}`,timeframe:i.referralRecommendation.urgency||"As needed",reasoning:i.referralRecommendation.reason||"No reasoning provided"}]:[]}}async submitCase(n){var i,o,t,r,d;try{const a={patientId:n.patientId,symptoms:n.symptoms,labResults:n.labResults||[],currentMedications:n.currentMedications||[],vitalSigns:n.vitalSigns||{},patientConsent:n.patientConsent||{provided:!0,method:"electronic"}},s=(await c.post("/api/diagnostics/ai",a,{timeout:18e4})).data.data,p=this.transformAnalysisStructure(s.analysis);return{id:s.caseId,patientId:n.patientId,caseData:n,aiAnalysis:{id:s.caseId,caseId:s.caseId,analysis:p,confidence:((i=s.analysis)==null?void 0:i.confidenceScore)||0,processingTime:s.processingTime,createdAt:new Date().toISOString(),status:"completed"},status:"completed",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}}catch(a){if(console.error("Failed to submit diagnostic case:",a),a&&typeof a=="object"&&"response"in a&&a.response&&typeof a.response=="object"&&"status"in a.response){const e=a.response;if(e.status===401){const s=((o=e.data)==null?void 0:o.message)||"Authentication failed";throw new Error(`Authentication Error: ${s}`)}else if(e.status===403){const s=((t=e.data)==null?void 0:t.message)||"Access denied";throw new Error(`Permission Error: ${s}`)}else if(e.status===402){const s=((r=e.data)==null?void 0:r.message)||"Subscription required";throw new Error(`Subscription Error: ${s}`)}else if((d=e.data)!=null&&d.message)throw new Error(e.data.message)}throw a}}async getAnalysis(n){try{const i=await this.getCase(n);if(i.aiAnalysis)return i.aiAnalysis;throw new Error("No AI analysis found for this case")}catch(i){throw console.error("Failed to get AI analysis:",i),i}}async getCase(n){var i,o,t,r,d;try{const e=(await c.get(`/api/diagnostics/cases/${n}`,{timeout:3e4})).data.data;return{id:e._id,patientId:typeof e.patientId=="object"?e.patientId._id||e.patientId.id:e.patientId,caseData:{patientId:typeof e.patientId=="object"?e.patientId._id||e.patientId.id:e.patientId,symptoms:e.symptoms,vitals:e.vitalSigns||{},currentMedications:e.currentMedications||[],allergies:[],medicalHistory:[],labResults:e.labResults||[]},aiAnalysis:e.aiAnalysis?{id:e._id,caseId:e.caseId,analysis:this.transformAnalysisStructure(e.aiAnalysis),confidence:e.aiAnalysis.confidenceScore||0,processingTime:((i=e.aiRequestData)==null?void 0:i.processingTime)||0,createdAt:e.createdAt,status:"completed"}:void 0,status:e.status==="pending"||e.status==="processing"?"analyzing":e.status==="completed"?"completed":e.status==="failed"?"failed":"analyzing",createdAt:e.createdAt,updatedAt:e.updatedAt}}catch(a){if(console.error("Failed to get diagnostic case:",a),a&&typeof a=="object"&&"response"in a&&a.response&&typeof a.response=="object"&&"status"in a.response){const e=a.response;if(e.status===401){const s=((o=e.data)==null?void 0:o.message)||"Authentication failed";throw new Error(`Authentication Error: ${s}`)}else if(e.status===403){const s=((t=e.data)==null?void 0:t.message)||"Access denied";throw new Error(`Permission Error: ${s}`)}else if(e.status===422){const s=((r=e.data)==null?void 0:r.message)||"Invalid request data";throw new Error(`Validation Error: ${s}`)}else if((d=e.data)!=null&&d.message)throw new Error(e.data.message)}throw a}}async getPatientCases(n){try{return(await c.get(`/api/diagnostics/patients/${n}/history`)).data.data.cases.map(t=>{var r;return{id:t._id,patientId:typeof t.patientId=="object"?t.patientId._id||t.patientId.id:t.patientId,caseData:{patientId:typeof t.patientId=="object"?t.patientId._id||t.patientId.id:t.patientId,symptoms:t.symptoms,vitals:t.vitalSigns||{},currentMedications:t.currentMedications||[],allergies:[],medicalHistory:[],labResults:t.labResults||[]},aiAnalysis:t.aiAnalysis?{id:t._id,caseId:t.caseId,analysis:this.transformAnalysisStructure(t.aiAnalysis),confidence:t.aiAnalysis.confidenceScore||0,processingTime:((r=t.aiRequestData)==null?void 0:r.processingTime)||0,createdAt:t.createdAt,status:"completed"}:void 0,status:t.status==="pending"||t.status==="processing"?"analyzing":t.status==="completed"?"completed":t.status==="failed"?"failed":"analyzing",createdAt:t.createdAt,updatedAt:t.updatedAt}})}catch(i){throw console.error("Failed to get patient cases:",i),i}}async pollAnalysis(n,i=30){let o=0;for(;o<i;)try{const t=await this.getAnalysis(n);if(t.status==="completed")return t;if(t.status==="failed")throw new Error("AI analysis failed");await new Promise(r=>setTimeout(r,2e3)),o++}catch(t){if(o===i-1)throw t;await new Promise(r=>setTimeout(r,2e3)),o++}throw new Error("Analysis timeout - please check back later")}}const y=new l;export{y as a};
