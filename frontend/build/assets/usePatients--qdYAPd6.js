import{bi as u,cr as n,bF as r,c6 as a,bE as o,c7 as l}from"./index-louytu0d.js";const g=(t={})=>u({queryKey:n.patients.list(t),queryFn:()=>r.getPatients(t),staleTime:3e4,refetchOnWindowFocus:!1}),m=t=>u({queryKey:n.patients.detail(t),queryFn:()=>r.getPatient(t),enabled:!!t,refetchOnWindowFocus:!1}),d=t=>{var s,e;return t!=null&&t.success&&(t!=null&&t.data)&&t.data.patients?{data:{results:t.data.patients},meta:{total:t.data.total||0,page:1,limit:((s=t.data.patients)==null?void 0:s.length)||10,totalPages:1,hasNext:!1,hasPrev:!1}}:t!=null&&t.patients?{data:{results:t.patients},meta:{total:t.total||0,page:1,limit:((e=t.patients)==null?void 0:e.length)||10,totalPages:1,hasNext:!1,hasPrev:!1}}:Array.isArray(t)?{data:{results:t},meta:{total:t.length,page:1,limit:t.length,totalPages:1,hasNext:!1,hasPrev:!1}}:{data:{results:[]},meta:{total:0,page:1,limit:10,totalPages:1,hasNext:!1,hasPrev:!1}}},p=t=>u({queryKey:n.patients.search(t),queryFn:()=>r.searchPatients(t),enabled:!!t&&t.length>=2&&t.trim()!=="",select:d,staleTime:3e4,refetchOnWindowFocus:!1,refetchOnMount:!1,refetchInterval:!1}),f=()=>{const t=a(),s=o(e=>e.addNotification);return l({mutationFn:e=>r.createPatient(e),onSuccess:e=>{var c;t.invalidateQueries({queryKey:n.patients.all}),t.invalidateQueries({queryKey:n.patients.lists()}),t.refetchQueries({queryKey:n.patients.lists()});const i=(c=e==null?void 0:e.data)==null?void 0:c.patient;s({type:"success",title:"Patient Created",message:`Patient ${(i==null?void 0:i.firstName)||""} ${(i==null?void 0:i.lastName)||""} has been successfully created.`,duration:5e3})},onError:e=>{s({type:"error",title:"Creation Failed",message:e.message||"Failed to create patient. Please try again.",duration:5e3})}})},P=()=>{const t=a(),s=o(e=>e.addNotification);return l({mutationFn:({patientId:e,patientData:i})=>r.updatePatient(e,i),onSuccess:(e,i)=>{t.setQueryData(n.patients.detail(i.patientId),e),t.invalidateQueries({queryKey:n.patients.lists()}),s({type:"success",title:"Patient Updated",message:"Patient information has been successfully updated.",duration:5e3})},onError:e=>{s({type:"error",title:"Update Failed",message:e.message||"Failed to update patient. Please try again.",duration:5e3})}})},q=()=>{const t=a(),s=o(e=>e.addNotification);return l({mutationFn:e=>r.deletePatient(e),onSuccess:(e,i)=>{t.removeQueries({queryKey:n.patients.detail(i)}),t.invalidateQueries({queryKey:n.patients.lists()}),s({type:"success",title:"Patient Deleted",message:"Patient has been successfully deleted.",duration:5e3})},onError:e=>{s({type:"error",title:"Deletion Failed",message:e.message||"Failed to delete patient. Please try again.",duration:5e3})}})},F=(t,s)=>u({queryKey:n.allergies.byPatient(t),queryFn:()=>r.getAllergies(t,s),enabled:!!t}),h=()=>{const t=a(),s=o(e=>e.addNotification);return l({mutationFn:({patientId:e,allergyData:i})=>r.createAllergy(e,i),onSuccess:(e,i)=>{t.invalidateQueries({queryKey:n.allergies.byPatient(i.patientId)}),t.invalidateQueries({queryKey:n.patients.detail(i.patientId)}),s({type:"success",title:"Allergy Added",message:"Patient allergy has been successfully recorded.",duration:4e3})},onError:e=>{s({type:"error",title:"Failed to Add Allergy",message:e.message||"Unable to record allergy. Please try again.",duration:5e3})}})},C=()=>{const t=a(),s=o(e=>e.addNotification);return l({mutationFn:({allergyId:e,allergyData:i})=>r.updateAllergy(e,i),onSuccess:(e,i)=>{t.setQueryData(n.allergies.detail(i.allergyId),e),t.invalidateQueries({queryKey:n.allergies.lists()}),s({type:"success",title:"Allergy Updated",message:"Allergy information has been updated.",duration:4e3})},onError:e=>{s({type:"error",title:"Update Failed",message:e.message||"Failed to update allergy.",duration:5e3})}})},A=()=>{const t=a(),s=o(e=>e.addNotification);return l({mutationFn:e=>r.deleteAllergy(e),onSuccess:(e,i)=>{t.removeQueries({queryKey:n.allergies.detail(i)}),t.invalidateQueries({queryKey:n.allergies.lists()}),s({type:"success",title:"Allergy Deleted",message:"Allergy record has been removed.",duration:4e3})},onError:e=>{s({type:"error",title:"Deletion Failed",message:e.message||"Failed to delete allergy.",duration:5e3})}})},N=t=>u({queryKey:n.conditions.byPatient(t),queryFn:()=>r.getConditions(t),enabled:!!t,select:s=>{var e,i,c;return console.log("Condition data:",s),(e=s==null?void 0:s.data)!=null&&e.conditions?{results:s.data.conditions,total:s.data.total||0}:s!=null&&s.conditions?{results:s.conditions,total:s.total||0}:s!=null&&s.results?s:Array.isArray(s)?{results:s,total:s.length}:s!=null&&s.data&&Array.isArray(s.data)?{results:s.data,total:s.data.length}:(i=s==null?void 0:s.data)!=null&&i.results?{results:s.data.results,total:((c=s.meta)==null?void 0:c.total)||0}:{results:[],total:0}},retry:1,retryDelay:()=>1e3,staleTime:3e4}),K=()=>{const t=a(),s=o(e=>e.addNotification);return l({mutationFn:({patientId:e,conditionData:i})=>r.createCondition(e,i),onSuccess:(e,i)=>{t.invalidateQueries({queryKey:n.conditions.byPatient(i.patientId)}),t.invalidateQueries({queryKey:n.patients.detail(i.patientId)}),s({type:"success",title:"Condition Added",message:"Patient condition has been recorded.",duration:4e3})},onError:e=>{s({type:"error",title:"Failed to Add Condition",message:e.message||"Unable to record condition.",duration:5e3})}})},b=()=>{const t=a(),s=o(e=>e.addNotification);return l({mutationFn:({conditionId:e,conditionData:i})=>r.updateCondition(e,i),onSuccess:(e,i)=>{t.setQueryData(n.conditions.detail(i.conditionId),e),t.invalidateQueries({queryKey:n.conditions.lists()}),s({type:"success",title:"Condition Updated",message:"Condition information has been updated.",duration:4e3})},onError:e=>{s({type:"error",title:"Update Failed",message:e.message||"Failed to update condition.",duration:5e3})}})},v=()=>{const t=a(),s=o(e=>e.addNotification);return l({mutationFn:e=>r.deleteCondition(e),onSuccess:(e,i)=>{t.removeQueries({queryKey:n.conditions.detail(i)}),t.invalidateQueries({queryKey:n.conditions.lists()}),s({type:"success",title:"Condition Deleted",message:"Condition record has been removed.",duration:4e3})},onError:e=>{s({type:"error",title:"Deletion Failed",message:e.message||"Failed to delete condition.",duration:5e3})}})},Q=t=>u({queryKey:n.patients.summary(t),queryFn:()=>r.getPatientSummary(t),enabled:!!t,staleTime:2*60*1e3});export{q as a,p as b,f as c,m as d,P as e,Q as f,F as g,h,C as i,A as j,N as k,K as l,b as m,v as n,g as u};
